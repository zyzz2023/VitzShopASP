@using VitzShop.Services
@using VitzShop.Data.Models
@using Microsoft.AspNetCore.Components

@page "/productcard/{id:int}"
@inject ProductService ProductService


@if (Product == null)
{
    <p>Загрузка...</p>
}
else
{
    <div class="container mt-1">
        <div class="row flex-column flex-md-row">
            <!-- Карусель изображений -->
            <div class="offset-md-1" style="max-width: 500px; margin-left: 0;">
                <div id="productCarousel" class="carousel slide">
                    <div class="carousel-inner">
                        @for (int i = 0; i < Product.Images?.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@Product.Images[i].Url" class="d-block w-100" alt="Изображение @i">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    </button>
                </div>
            </div>

            <!-- Информация о товаре -->
            <div class="col-md-6 mt-4 mt-md-0">
                <h2>@Product.Name</h2>
                <h4>@($"{Product.Price:C}")</h4>

                <!-- Пример: Размеры -->
                <div class="mt-3">
                    <strong>Размер M:</strong> @($"{Product.SizeM} шт.")
                </div>
                <div class="mt-3">
                    <strong>Размер L:</strong> @($"{Product.SizeL} шт.")
                </div>
                <div class="mt-3">
                    <strong>Размер XL:</strong> @($"{Product.SizeXl} шт.")
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public int id { get; set; }

    private Product? Product;

    protected override async Task OnInitializedAsync()
    {
        Product = await ProductService.GetProductByIdAsync(id);
        StateHasChanged();  // Обновление UI
    }
}

