@using VitzShop.Infrastructure.Services
@using VitzShop.Core.Entities
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms

@page "/admin/products/edit/{id:int}"
@attribute [Authorize(Roles = "Admin,Manager")]
@inject ProductService ProductService
@inject CategoriesService CategoriesService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h1 class="mb-4"><i class="bi bi-plus-circle"></i> Редактирование товара</h1>

@if (IsLoading)
{
    <p>Загрузка...</p>
}
else if (EditProduct == null)
{
    <p class="text-danger">Товар не найден</p>
}
else
{
    <EditForm Model="@EditProduct" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label class="form-label">Количество M</label>
        <InputNumber class="form-control mb-3" @bind-Value="EditProduct.SizeM" />
        <label class="form-label">Количество L</label>
        <InputNumber class="form-control mb-3" @bind-Value="EditProduct.SizeL" />
        <label class="form-label">Количество XL</label>
        <InputNumber class="form-control mb-3" @bind-Value="EditProduct.SizeXl" />
        <!-- Основное -->
        <label class="form-label">Название</label>
        <InputText class="form-control mb-3" @bind-Value="EditProduct.Name" />
        <InputSelect class="form-select" @bind-Value="EditProduct.CategoryId">
            <option value="">-- Категория --</option>
            @foreach (var category in Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
        <label class="form-label">Пол</label>
        <InputText class="form-control mb-3" @bind-Value="EditProduct.Gender" />
        <label class="form-label">Описание</label>
        <InputTextArea class="form-control" @bind-Value="EditProduct.Description" />
        <label class="form-label">Цена</label>
        <InputNumber class="form-control mb-3" @bind-Value="EditProduct.Price" />
        <!-- Фото -->
        <label class="form-label">Основное фото</label>
        <InputFile OnChange="HandleMainImageEdit" accept="image/*" />
        <label class="form-label">Дополнительные фото</label>
        <InputFile OnChange="HandleGalleryEdit" multiple accept="image/*" />


        <button class="btn btn-primary" type="submit">Сохранить</button>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }

    private Product? EditProduct;
    private List<Category>? Categories;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        Categories = await CategoriesService.GetAllCategoriesAsync();
        EditProduct = await ProductService.GetProductByIdAsync(id);
        IsLoading = false;
    }

    private async Task HandleValidSubmit()
    {
        await ProductService.UpdateProductAsync(EditProduct!);
        Navigation.NavigateTo("/admin/products");
    }



    private async Task HandleMainImageEdit(InputFileChangeEventArgs e)
    {
        var mainPhoto = "wwwroot/" + EditProduct.ImageUrl;
        if (File.Exists(mainPhoto))
        {
            File.Delete(mainPhoto);
            Console.WriteLine($"Файл {mainPhoto} удален");
        }
        else
        {
            Console.WriteLine($"Файл по пути {mainPhoto} не найден");
        }


        var file = e.File;

        var trustedName = Path.GetRandomFileName() + Path.GetExtension(file.Name);
        var path = Path.Combine("wwwroot/Images", trustedName);

        using var stream = File.Create(path);
        await file.OpenReadStream().CopyToAsync(stream);

        EditProduct.ImageUrl = $"/Images/{trustedName}";
    }

    private async Task HandleGalleryEdit(InputFileChangeEventArgs e)
    {
        foreach (var image in EditProduct.Images)
        {
            var filePath = "wwwroot/" + image.Url;


            if (File.Exists(filePath))
            {
                File.Delete(filePath);
                Console.WriteLine($"Файл {filePath} удален");
            }
            else
            {
                Console.WriteLine($"Файл по пути {filePath} не найден");
            }
        }

        foreach (var file in e.GetMultipleFiles())
        {
            var name = Path.GetRandomFileName() + Path.GetExtension(file.Name);
            var path = Path.Combine("wwwroot/Images", name);

            using var stream = File.Create(path);
            await file.OpenReadStream().CopyToAsync(stream);

            EditProduct.Images.Add(new ProductImage
            {
                Url = $"/Images/{name}"
            });
        }
    }
}
