@using VitzShop.Core.Entities
@using VitzShop.Infrastructure.Services
@using Microsoft.AspNetCore.Components

@page "/productcatalog/{gender}"
@inject ProductService ProductService
@inject CategoriesService CategoriesService
@inject NavigationManager Navigation
@rendermode InteractiveServer



    @if (!string.IsNullOrWhiteSpace(gender))
    {
        <span class="gender-text">@gender</span>
    } else
    {
        <span class="gender-text">Общий каталог</span>
    }
<!-- Категории -->
<div class="mb-4">
    @if (categories == null)
    {
        <p>Загрузка категорий...</p>
    }
    else if (!categories.Any())
    {
        <p>Нет категорий.</p>
    }
    else
    {
        <div class="row g-0">
            @foreach (var category in categories)
            {
                <div class="col-6 col-md-4 col-lg-3 p-0">
                    <div class="position-relative image-hover-container"
                    @onclick="() => FilterByCategoryAsync(category.Id)"
                    style="cursor: pointer; overflow: hidden; aspect-ratio: 3/4;">

                        <!-- Изображение с эффектом увеличения -->
                        @if (!string.IsNullOrEmpty(category.ImageUrl))
                        {
                            <img src="@category.ImageUrl"
                            alt="@category.Name"
                            class="w-100 h-100 image-hover-target"
                            style="object-fit: cover; display: block; transition: transform 0.5s ease;">
                        }
                        else
                        {
                            <div class="bg-secondary w-100 h-100 d-flex align-items-center justify-content-center">
                                <span class="text-white">No image</span>
                            </div>
                        }

                        <!-- Подпись с затемнением -->
                        <div class="position-absolute bottom-0 start-0 end-0 p-2 overlay-hover"
                        style="background: linear-gradient(to top, rgba(0,0,0,0.7), transparent); transition: all 0.5s ease;">
                            <h5 class="text-white text-center mb-0">@category.Name</h5>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@* <!-- Товары -->
@if (products == null)
{
    <p>Загрузка товаров...</p>
}
else if (!products.Any())
{
    <p>Нет товаров в выбранной категории.</p>
}
else
{
    <div class="row">
        @foreach (var product in products)
        {
            <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                <a href="@($"/productcard/{product.Id}")" style="text-decoration: none; color: inherit;">
                    <div class="card product-card h-100">
                        <div class="image-wrapper">
                            <img src="@product.ImageUrl" alt="@product.Name" class="card-img-top" />
                        </div>
                        <div class="card-body p-2">
                            <h6 class="card-title mb-1 text-truncate">@product.Name</h6>
                            <p class="card-text small text-muted mb-0">@($"{product.Price:C}")</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
} *@

@code {
    [Parameter]
    public string? gender { get; set; }

    private List<Category> categories = new();
    private List<Product> products = new();
    private int selectedCategoryId;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Инициализация категорий...");
        categories = await CategoriesService.GetAllCategoriesAsync();

        if (categories == null || !categories.Any())
        {
            Console.WriteLine("Нет категорий.");
            return;
        }

        // Если передан параметр gender
        if (!string.IsNullOrWhiteSpace(gender))
        {
            var genderLower = gender.ToLower();
            foreach (var category in categories)
            {
                var productsInCategory = await ProductService.GetProductsByCategoryAndGenderAsync(category.Id, genderLower);
                if (productsInCategory.Any())
                {
                    selectedCategoryId = category.Id;
                    products = productsInCategory;
                    return;
                }
            }
            Console.WriteLine($"Нет товаров с гендером '{gender}' в доступных категориях.");
            selectedCategoryId = categories.First().Id;
            return;
        }
    }


    private async Task FilterByCategoryAsync(int categoryId)
    {
        Navigation.NavigateTo($"/productcatalog/{gender}/{categoryId}");
        StateHasChanged();
    }
}
