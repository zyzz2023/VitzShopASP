@using VitzShop.Core.Entities
@using VitzShop.Infrastructure.Services
@using Microsoft.AspNetCore.Components

@page "/productcatalog/{gender}/{changedCategoryId}"
@inject ProductService ProductService
@inject NavigationManager Navigation
@inject IHeaderService HeaderService
@rendermode InteractiveServer



<!-- Товары -->
@if (products == null)
{
    <p>Загрузка товаров...</p>
}
else if (!products.Any())
{
    <p>Нет товаров в выбранной категории.</p>
}
else
{
    <div class="row">
        @foreach (var product in products)
        {
            <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                <a href="@($"/productcard/{product.Id}")" style="text-decoration: none; color: inherit;">
                    <div class="card product-card h-100">
                        <div class="image-wrapper">
                            <img src="@product.ImageUrl" alt="@product.Name" class="card-img-top" />
                        </div>
                        <div class="card-body p-2">
                            <h6 class="card-title mb-1 text-truncate">@product.Name</h6>
                            <p class="card-text small text-muted mb-0">@($"{product.Price:C}")</p>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
}


@code{
    [Parameter]
    public string? gender { get; set; }
    [Parameter]
    public string? changedCategoryId { get; set; }

    private List<Product> products = new();

    protected override async Task OnInitializedAsync()
    {
        HeaderService.LogoText = (gender == "Мужской" ? "V I T Z   M A N" : "V I T Z   W O M A N");

        int.TryParse(changedCategoryId, out int categoryId);
        if (!string.IsNullOrWhiteSpace(gender))
        {
            var genderLower = gender.ToLower();
            products = await ProductService.GetProductsByCategoryAndGenderAsync(categoryId, genderLower);
            return;
        }
        products = await ProductService.GetProductsByCategoryIdAsync(categoryId);
        return;
    }

}