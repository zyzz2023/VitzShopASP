@using VitzShop.Infrastructure.Services
@using VitzShop.Core.Entities
@using Microsoft.AspNetCore.Components

@page "/productsearch"
@inject ProductService ProductService
@inject NavigationManager Navigation
@rendermode InteractiveServer



@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? search { get; set; }

    private List<Product>? Results;

    protected override async Task OnParametersSetAsync()
    {
        await Search();
    }

    private async Task Search()
    {
        if (!string.IsNullOrWhiteSpace(search))
        {
            Console.WriteLine($"Поиск: {search}");
            Results = await ProductService.SearchProductsAsync(search);
        }
        else
        {
            Console.WriteLine("Пустой запрос.");
            Results = new(); // Пустой список, чтобы не показывать "ничего не найдено" при первой загрузке
        }
    }
}

<span class="gender-text mb-2">Поиск</span>

<div class="mb-4">
	@if (Results != null)
	{
		<div class="row">
			@if (Results.Count == 0)
			{
				<p>Товаров найдено: 0</p>
			}
			else
			{
				@foreach (var product in Results)
				{
                    <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                        <a href="@($"/productcard/{product.Id}")" style="text-decoration: none; color: inherit;">
                            <div class="card product-card h-100">
                                <div class="image-wrapper">
                                    <img src="@product.ImageUrl" alt="@product.Name" class="card-img-top" />
                                </div>
                                <div class="card-body p-2">
                                    <h6 class="card-title mb-1 text-truncate">@product.Name</h6>
                                    <p class="card-text small text-muted mb-0">@($"{product.Price:C}")</p>
                                </div>
                            </div>
                        </a>
                    </div>
				}
			}
		</div>
	}
	else
	{
		<p>Ничего не найдено.</p>
	}
</div>

